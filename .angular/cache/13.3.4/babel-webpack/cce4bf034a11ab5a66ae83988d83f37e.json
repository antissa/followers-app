{"ast":null,"code":"import { BadInputError } from '../public/bad-input';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/post.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction PostsComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 4)(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PostsComponent_li_5_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const post_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.updatePost(post_r2);\n    });\n    i0.ɵɵtext(2, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PostsComponent_li_5_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const post_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deletePost(post_r2);\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", post_r2.title, \"\\n\");\n  }\n}\n\nexport let PostsComponent = /*#__PURE__*/(() => {\n  class PostsComponent {\n    constructor(service) {\n      this.service = service;\n    }\n\n    addPost(naslov) {\n      let post = {\n        title: naslov.value\n      };\n      this.postsArray.splice(0, 0, post);\n      naslov.value = '';\n      this.service.add(post).subscribe({\n        next: newPost => {\n          post['id'] = newPost['id'];\n        },\n        error: error => {\n          this.postsArray.splice(0, 1);\n          if (error instanceof BadInputError) console.log('Bad input errorrrrrr!!');else throw error;\n        }\n      });\n    }\n\n    updatePost(post) {\n      this.service.update(post).subscribe({\n        next: updatedPost => {\n          console.log(updatedPost);\n        }\n      });\n    }\n\n    deletePost(post) {\n      this.service.izbrisi(post.id); //converted to promise\n\n      /*     let index = this.postsArray.indexOf(post);\r\n          this.postsArray.splice(index, 1);\r\n      \r\n          this.service.izbrisi(330)\r\n            .subscribe({\r\n              next: ()=> {\r\n                null\r\n              },\r\n              error: (error: AppError) => {\r\n                this.postsArray.splice(index, 0, post)\r\n                if(error instanceof NotFoundError)\r\n                  alert('This post has already been deleted');\r\n                else throw error;\r\n              }\r\n          }) */\n    }\n\n    ngOnInit() {\n      this.service.getAll().subscribe({\n        next: postsArray => this.postsArray = postsArray\n      });\n    }\n\n  }\n\n  PostsComponent.ɵfac = function PostsComponent_Factory(t) {\n    return new (t || PostsComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n  };\n\n  PostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostsComponent,\n    selectors: [[\"posts\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"keyup.enter\"], [\"naslov\", \"\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n    template: function PostsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"posts works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0, 1);\n        i0.ɵɵlistener(\"keyup.enter\", function PostsComponent_Template_input_keyup_enter_2_listener() {\n          i0.ɵɵrestoreView(_r6);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.addPost(_r0);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ul\", 2);\n        i0.ɵɵtemplate(5, PostsComponent_li_5_Template, 6, 1, \"li\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.postsArray);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"\"]\n  });\n  return PostsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}